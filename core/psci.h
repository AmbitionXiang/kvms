/* SPDX-License-Identifier: GPL-2.0-only */

#ifndef __PSCI_H__
#define __PSCI_H__

#define PSCI_SMC64				0xC4UL
#define PSCI_CPU_SUSPEND			0x80000001UL
#define PSCI_VERSION				0x84000000UL
#define PSCI_DEFAULT_SUSPEND			0x8400000CUL
#define PSCI_DEFAULT_SUSPEND_SMC64		0xc400000CUL
#define PSCI_CPU_SUSPEND_SMC64			0xC4000001UL
#define PSCI_CPU_OFF				0x84000002UL
#define PSCI_CPU_ON				0x84000003UL
#define PSCI_CPU_ON_SMC64			0xC4000003UL
#define PSCI_AFFINITY_INFO			0x84000004UL
#define PSCI_AFFINITY_INFO_SMC64		0xC4000004UL
#define PSCI_MIGRATE				0x84000005UL
#define PSCI_MIGRATE_SMC64			0xC4000005UL
#define PSCI_MIGRATE_INFO_TYPE			0x84000006UL
#define PSCI_MIGRATE_INFO_UP_CPU		0x84000007UL
#define PSCI_MIGRATE_INFO_UP_CPU_SMC64		0xc4000007UL
#define PSCI_SYSTEM_OFF				0x84000008UL
#define PSCI_SYSTEM_RESET			0x84000009UL
#define PSCI_SYSTEM_RESET2			0x84000012UL
#define PSCI_SYSTEM_RESET_SMC64			0xc4000012UL
#define PSCI_FEATURES				0x8400000AUL
#define PSCI_MEM_PROTECT			0x84000013UL
#define PSCI_MEM_PROTECT_CHECK_RANGE		0x84000014UL
#define PSCI_MEM_PROTECT_CHECK_RANGE_SMC64	0xc4000014UL
#define PSCU_CPU_FREEZE				0x8400000BUL
#define PSCI_NODE_HW_STATE			0x8400000DUL
#define PSCI_NODE_HW_STATE_SMC64		0xc400000DUL
#define PSCI_SYSTEM_SUSPEND			0x8400000EUL
#define PSCI_SYSTEM_SUSPEND_SMC64		0xc400000EUL
#define PSCI_SET_SUSPEND_MODE			0x8400000FUL

#define PSCI_SUCCESS		0
#define PSCI_NOT_SUPPORTED	-1
#define PSCI_INVALID_PARAMETERS	-2
#define PSCI_DENIED		-3
#define PSCI_ALREADY_ON		-4
#define PSCI_ON_PENDING		-5
#define PSCI_INTERNAL_FAILURE	-6
#define PSCI_NOT_PRESENT	-7
#define PSCI_DISABLED		-8
#define PSCI_INVALID_ADDRESS	-9

#define ARM_SMCCC_FAST_CALL	        1U
#define ARM_SMCCC_TYPE_SHIFT		31

#define ARM_SMCCC_SMC_32		0
#define ARM_SMCCC_SMC_64		1
#define ARM_SMCCC_CALL_CONV_SHIFT	30

#define ARM_SMCCC_OWNER_MASK		0x3F
#define ARM_SMCCC_OWNER_SHIFT		24

#define ARM_SMCCC_FUNC_MASK		0xFFFF

#define ARM_SMCCC_CALL_VAL(type, calling_convention, owner, func_num) \
	(((type) << ARM_SMCCC_TYPE_SHIFT) | \
	((calling_convention) << ARM_SMCCC_CALL_CONV_SHIFT) | \
	(((owner) & ARM_SMCCC_OWNER_MASK) << ARM_SMCCC_OWNER_SHIFT) | \
	((func_num) & ARM_SMCCC_FUNC_MASK))

#define ARM_SMCCC_ARCH_WORKAROUND_1					\
	ARM_SMCCC_CALL_VAL(ARM_SMCCC_FAST_CALL,				\
			   ARM_SMCCC_SMC_32,				\
			   0, 0x8000)

#define ARM_SMCCC_ARCH_WORKAROUND_2					\
	ARM_SMCCC_CALL_VAL(ARM_SMCCC_FAST_CALL,				\
			   ARM_SMCCC_SMC_32,				\
			   0, 0x7fff)

#define ARM_SMCCC_ARCH_WORKAROUND_3					\
	ARM_SMCCC_CALL_VAL(ARM_SMCCC_FAST_CALL,				\
			   ARM_SMCCC_SMC_32,				\
			   0, 0x3fff)

#ifndef __ASSEMBLY__
#include <stdint.h>
#include "helpers.h"

void psci_reg(u_register_t cn, u_register_t a1, u_register_t a2, u_register_t a3,
	      u_register_t a4, u_register_t a5);
#endif // __ASSEMBLY__

#endif // __PSCI_H__
