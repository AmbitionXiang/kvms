#
# This docker environment is to ease up building the tools needed
# for building and running the kvms hypervisor. By using this the
# user does not need to install all the dependencies and tools to
# the host.
#
# See https://docs.docker.com/engine/install/ and
# https://docs.docker.com/engine/install/linux-postinstall/ for docker
# engine setup.
#
# Go to the docker folder, meaning the folder with this README 
# and Dockerfile inside.
#
# Copy your host gitconfig, or create a stripped down version:

cp ~/.gitconfig gitconfig

# Build the docker image

docker build --build-arg userid=$(id -u) --build-arg groupid=$(id -g) --build-arg username=$(id -un) -t kvms .

# When building for virt machine:
export HYP_BUILD_ROOT=<kvms root folder>
docker run -it --rm \
		-v $HYP_BUILD_ROOT:/hyp \
		--env PLATFORM=virt \
		kvms

# When building for NXP imx8qmmek use the imx8qmmek-docker-run.sh:
./imx8qmmek-docker-run.sh <kvms root folder> <kernel root folder>
# For example:
./imx8qmmek-docker-run.sh /home/me/kvms /home/me/imx8kernel

# Enter the hyp folder mounted by docker

cd hyp

# Make. First time it will take long time to build: It will fetch and
# build all the tools needed for building and running the kvms hypervisor
# code. The following builds will be faster since only the kvms hypervisor
# itself is being built.

make

# Make qemu-for-android.

make android-qemu

# If this make fails due to permission issues, re-run the docker image
# with additional parameters '--cap-add=SYS_ADMIN --privileged=true'.
